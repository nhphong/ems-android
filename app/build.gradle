plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'kotlin-allopen'
    id 'com.google.gms.google-services'
    id 'jacoco'
    id 'com.github.kt3k.coveralls'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "com.ea.ems"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            storeFile file("${project.rootDir}/keystore/debug.keystore")
            storePassword getLocalProperty('debugStorePassword', '\"\"')
            keyAlias getLocalProperty('debugKeyAlias', '\"\"')
            keyPassword getLocalProperty('debugKeyPassword', '\"\"')
        }
        release {
            storeFile file("${project.rootDir}/keystore/release.keystore")
            storePassword getLocalProperty('storePassword', '\"\"')
            keyAlias getLocalProperty('keyAlias', '\"\"')
            keyPassword getLocalProperty('keyPassword', '\"\"')
        }
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            applicationIdSuffix ".debug"
            testCoverageEnabled project.hasProperty('coverage')
            signingConfig signingConfigs.debug
        }
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    flavorDimensions 'mode'
    productFlavors {
        staging {
            dimension 'mode'
            applicationIdSuffix ".staging"
        }
        production {
            dimension 'mode'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

allOpen {
    annotation("com.ea.ems.core.annotation.AllOpen")
}

jacoco {
    toolVersion '0.8.6+'
}

task jacocoTestReport(type: JacocoReport) {
    group = 'Reporting'
    description = 'Generate Jacoco global coverage reports.'

    reports {
        xml.enabled = true
        html.enabled = true
    }
    // exclude auto-generated classes and tests
    def fileFilter = ['**/R.class',
                      '**/R$*.class',
                      '**/BuildConfig.*',
                      '**/Manifest*.*',
                      '**/*Test*.*',
                      'android/**/*.*',
    ]
    def debugKotlinAppTree = fileTree(dir: "${buildDir}/tmp/kotlin-classes/stagingDebug", excludes: fileFilter)
    def mainAppSrc = "${project.projectDir}/src/main/java"
    getSourceDirectories().setFrom(mainAppSrc)
    getClassDirectories().setFrom(debugKotlinAppTree)
    def appAndroidTests = fileTree(dir: "${buildDir}/outputs/code_coverage/stagingDebugAndroidTest/connected", includes: ["*.ec"])
    getExecutionData().setFrom("${buildDir}/jacoco/testStagingDebugUnitTest.exec", appAndroidTests)
}

coveralls {
    def mainAppSrc = "${project.projectDir}/src/main/java"
    sourceDirs = files([mainAppSrc]).flatten()
}

tasks.coveralls {
    onlyIf { System.getenv('COVERALLS_REPO_TOKEN') }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'

    // Firebase
    implementation platform('com.google.firebase:firebase-bom:26.1.0')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-auth-ktx'

    // Google Play Services
    implementation 'com.google.android.gms:play-services-auth:19.0.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.1.1'

    // Facebook SDK
    implementation 'com.facebook.android:facebook-login:5.15.3'

    // Navigation
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.1'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.1'

    // Fragment
    implementation "androidx.fragment:fragment-ktx:1.3.0-beta01"

    // Activity
    implementation 'androidx.activity:activity-ktx:1.2.0-beta01'

    // Timber
    implementation 'com.jakewharton.timber:timber:4.7.1'

    // Koin
    implementation "org.koin:koin-android:2.1.5"
    implementation "org.koin:koin-androidx-viewmodel:2.1.5"

    // sdp and ssp
    implementation 'com.intuit.sdp:sdp-android:1.0.6'
    implementation 'com.intuit.ssp:ssp-android:1.0.6'

    testImplementation 'junit:junit:4.13.1'

    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
    androidTestImplementation "org.koin:koin-test:2.1.5"
}

String getLocalProperty(String key, String defaultValue) {
    return project.localProperties.getProperty(key, defaultValue)
}
